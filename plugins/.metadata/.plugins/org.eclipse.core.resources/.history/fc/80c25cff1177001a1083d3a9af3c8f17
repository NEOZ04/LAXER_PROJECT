<?php 

namespace laxer\pshop;

use pocketmine\Player;
use laxer\Core;
use pocketmine\tile\Chest;
use pocketmine\utils\Config;
use pocketmine\tile\Sign;

class PShop {
    
    
    
    public function createShop(Player $p){
        if ($p->hasPermission('laxer.pshop')){
            new Shop($p->getName());
        }
        return false;
    }
    
    public function resetShop(Player $p){
        $shop = $this->getShop($p->getName());
        return $shop->reset();
    }
    
    public function getShop(String $name){
        if ($this->hasCreated($name)) {
            return new Shop($name);
        }
        return null;
    }
    
    public function getAllShops(){
        $files = scandir(Core::getInstance()->getDataFolder().'shops');
        $shops = [];
        foreach ($files as $filename){
            $conf = new Config(Core::getInstance()->getDataFolder().'shops/'.$filename);
            $name = $conf->get('name');
            $shops[] = $this->getShop($name);
        }
        return $shops;
    }
    
    public function hasCreated(String $name){
        $hashname = hash('md5', $name);
        $filepath = Core::getInstance()->getDataFolder()."shops/".$hashname.".json";
        return file_exists($filepath);
    }
    
    public function getOwnerByChest(Chest $chest){
        foreach ($this->getAllShops() as $shop){
            if ($shop->isChestShop($chest)) return $shop->getOwner();
        }
        return null;
    }
    
    public function getOwnerBySign(Sign $sign){
        foreach ($this->getAllShops() as $shop){
            if ($shop->issetSign($sign)) return $shop->getOwner();
        }
        return null;
    }
    
    public function getShopByChest(Chest $chest){
        $owner = $this->getOwnerByChest($chest);
        return $this->getShop($owner);
    }
    
    public function getShopBySign(Sign $sign){
        $owner = $this->getOwnerBySign($sign);
        if (!is_null($owner)){
            return $this->getShop($owner);
        }
        return null;
    }
    
    public function isChestShop(Chest $chest){
        foreach ($this->getAllShops() as $shop){
            if ($shop->isChestShop($chest)) return true;
        }
        return false;
    }
    
}